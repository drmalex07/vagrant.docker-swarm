---

#
# 1. Apply docker-engine role to all hosts
#

- hosts: all

  pre_tasks:

  - name: Check that a proper ipv4 network is specified
    assert:
      that: 
      - (network is defined) and (network | ipaddr("network"))
      - (ipv4_address is defined) and (ipv4_address | ipaddr(network))
      
  - set_fact:
      primary_ipv4_address: "{{ansible_all_ipv4_addresses| ipaddr(network)| first}}"
  
  - set_fact:    
      listen_address: '{{primary_ipv4_address}}'
  
  - name: Check that primary ipv4 address is discovered into facts
    assert:
      that: primary_ipv4_address == ipv4_address

  - name: Set default hostname if not supplied
    set_fact:
      hostname: '{{ansible_host}}'
    when: not (hostname is defined)
   
  - set_fact:
      hostname_s: '{{hostname.split(".") | first}}'

  vars:
  
    docker_compose_version: '1.16.1'

  roles:
  - 'docker-engine'

  tasks:

  - debug: var=play_hosts
  
  #- debug: var=network
  #- debug: var=hostname
    
  #- debug: var=listen_address
  #- debug: var=primary_ipv4_address
  #- debug: var=ipv4_address

  - name: Update /etc/hosts with hostnames of this swarm
    lineinfile:
      dest: /etc/hosts
      line: '{{hostvars[item].ipv4_address}} {{hostvars[item].hostname}} {{item}}'
      insertafter: '^127\.0\.1\.1 .*'
    with_items: '{{play_hosts}}'
    sudo: yes
 
#
# 2. Reboot all hosts
#

- hosts: all

  tasks:
  
  - name: Reboot for group membership to be re-evaluated
    shell: reboot
    sudo: yes
    async: 30
    poll: 0
    ignore_errors: true
  
  - name: Wait for play hosts to be up again
    wait_for:
      host: '{{hostvars[item].ansible_host}}'
      port: 22
      state: started
      delay: 10
      timeout: 40
    with_items: '{{play_hosts}}' 
    connection: local
  
  - name:
    shell: uptime

#
# 3. Initialize manager as a swarm manager node
#

- hosts: manager

  tasks:
    
  - name: Initialize swarm mode
    shell: docker swarm init --advertise-addr {{primary_ipv4_address}}
  
  - name: Get swarm token for joining a worker node
    shell: docker swarm join-token -q worker
    register: swarm_join_token_result

  - set_fact:
      swarm_join_token: '{{swarm_join_token_result.stdout}}'
  
  - debug:
      msg: The join token is {{swarm_join_token}}

#
# 4. Join worker nodes into swarm
#

- hosts: workers

  tasks:
    
  - set_fact:
      swarm_join_token: '{{hostvars["manager"].swarm_join_token}}'
      swarm_manager_address: '{{hostvars["manager"].primary_ipv4_address}}'

  - name: Join into swarm
    shell: docker swarm join --token "{{swarm_join_token}}" "{{swarm_manager_address}}:2377" 

